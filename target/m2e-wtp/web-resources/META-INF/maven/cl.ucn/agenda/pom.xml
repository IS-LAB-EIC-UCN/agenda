<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cl.ucn</groupId>
	<artifactId>agenda</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>Fabric8 :: Quickstarts :: War :: Wildfly</name>
	<description>Simple Wildfly Application deployed as war</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencyManagement>
		<dependencies>
			
			<!-- https://mvnrepository.com/artifact/jakarta.transaction/jakarta.transaction-api -->
			<dependency>
			    <groupId>jakarta.transaction</groupId>
			    <artifactId>jakarta.transaction-api</artifactId>
			    <version>2.0.1</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/jakarta.servlet.jsp.jstl/jakarta.servlet.jsp.jstl-api -->
			<dependency>
			    <groupId>jakarta.servlet.jsp.jstl</groupId>
			    <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
			    <version>3.0.0</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/joda-time/joda-time -->
		<dependency>
		    <groupId>joda-time</groupId>
		    <artifactId>joda-time</artifactId>
		    <version>2.12.5</version>
		</dependency>

		
		<!-- https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api -->
		<dependency>
		    <groupId>javax.ws.rs</groupId>
		    <artifactId>javax.ws.rs-api</artifactId>
		    <version>2.1.1</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/jakarta.platform/jakarta.jakartaee-api -->
		<dependency>
		    <groupId>jakarta.platform</groupId>
		    <artifactId>jakarta.jakartaee-api</artifactId>
		    <version>10.0.0</version>
		    <scope>provided</scope>
		</dependency>


		<!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->
		<dependency>
		    <groupId>jakarta.servlet</groupId>
		    <artifactId>jakarta.servlet-api</artifactId>
		    <version>6.0.0</version>
		    <scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>wildfly-fabric8</finalName>
		<plugins>
			<plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>4.2.1.Final</version>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <version>3.11.0</version>
	            <configuration>
	                <source>11</source>
	                <target>11</target>
	            </configuration>
        	</plugin>
		</plugins>
		
	</build>

	<!-- Default sample commands: mvn -Pf8-build ... build Docker images and 
		create OpenShift deployment configs mvn -Pf8-deploy ... f8-build + push to 
		Docker registry + applying deployment config to OpenShift mvn -Pf8-local-deploy 
		... deployment for a single node setup without pushing to a registry For 
		individual goal usage please consult the fabric8 documentation -->
	<profiles>
	
		<profile>
			<!-- The default profile skips all tests, though you can tune it to run 
				just unit tests based on a custom pattern -->
			<!-- Seperate profiles are provided for running all tests, including Arquillian 
				tests that execute in the specified container -->
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.2.2</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>

					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>3.4.0</version>
						<configuration>
							<archive>
								<manifestEntries>
									<Implementation-Version>${project.version}-${buildNumber}-${timestamp}</Implementation-Version>
								</manifestEntries>
							</archive>
							<failOnMissingWebXml>false</failOnMissingWebXml>
						</configuration>
						
					</plugin>

					
				</plugins>
			</build>

		</profile>


		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>3.4.0</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	
	</profiles>

</project>
